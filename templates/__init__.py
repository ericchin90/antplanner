from web.template import CompiledTemplate, ForLoop, TemplateResult

_dummy = CompiledTemplate(lambda: None, 'dummy')
join_ = _dummy._join
escape_ = _dummy._escape

def index():
    __lineoffset__ = -4
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'<html>\n'])
    extend_([u'<head>\n'])
    extend_([u'        <title>Ant Planner</title>\n'])
    extend_([u'\n'])
    extend_([u"        <link rel='stylesheet' type='text/css' href='http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/start/jquery-ui.css' />\n"])
    extend_([u"        <link rel='stylesheet' type='text/css' href='/static/css/jquery.weekcalendar.css' />\n"])
    extend_([u"        <link rel='stylesheet' type='text/css' href='/static/css/main.css' />\n"])
    extend_([u'                \n'])
    extend_([u"        <script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js'></script>\n"])
    extend_([u"        <script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js'></script>\n"])
    extend_([u"        <script type='text/javascript' src='/static/js/jquery.weekcalendar.js'></script>\n"])
    extend_([u'        \n'])
    extend_([u'        <script type="text/javascript" charset="utf-8">\n'])
    extend_([u'        \n'])
    extend_([u'        var START_YEAR = 2010; //static calendar year\n'])
    extend_([u'        var START_MONTH = 4; //static calendar month (May)\n'])
    extend_([u'        var START_DAY = 3; //Monday the 3rd \n'])
    extend_([u'        \n'])
    extend_([u'        var COURSE_BAG = []; //stores all courses on the calendar\n'])
    extend_([u'        var ID_COUNT = 0;\n'])
    extend_([u'        \n'])
    extend_([u'        function broadcastMessage(message) {\n'])
    extend_([u'                alert(message);\n'])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        function genID() {\n'])
    extend_([u'                ID_COUNT += 1;\n'])
    extend_([u'                return ID_COUNT;\n'])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        //parses course string into readable format ie. INF 41 Software Reqs\n'])
    extend_([u'        function constructCourseName(courseString, courseType, courseCode) {\n'])
    extend_([u'                //removing the course name for now...it takes up too much space\n'])
    extend_([u"                //courseName = courseString.match(/<b>.*<\\/b>/)[0].replace(/<.{1,2}>/g, '');\n"])
    extend_([u'                \n'])
    extend_([u"                courseNumber = courseString.match(/&nbsp;.*<font/)[0].replace('<font', '').replace(/&nbsp;/g, '').replace(/\\s{2,}/g, ' ');\n"])
    extend_([u'                \n'])
    extend_([u"                return (courseNumber + courseType + '<br/>(' + courseCode + ')');\n"])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        //returns an array containing the days a course occurs on\n'])
    extend_([u'        function getCourseDays(timeString) {\n'])
    extend_([u'                //READ: WORKAROUND\n'])
    extend_([u'                //Because the week calendar library does not support recurring\n'])
    extend_([u'                //events, a single week in time has been selected to represent \n'])
    extend_([u'                //a typical week for a school quarter. See date constants above.\n'])
    extend_([u'                \n'])
    extend_([u'                var days = [];\n'])
    extend_([u"                days['M'] = 3;\n"])
    extend_([u"                days['Tu'] = 4;\n"])
    extend_([u"                days['W'] = 5;\n"])
    extend_([u"                days['Th'] = 6;\n"])
    extend_([u"                days['F'] = 7;\n"])
    extend_([u'                \n'])
    extend_([u'                var courseDates = [];\n'])
    extend_([u'                \n'])
    extend_([u"                if(timeString.indexOf('M') != -1) {     courseDates.push(days['M']); } \n"])
    extend_([u"                if(timeString.indexOf('Tu') != -1) { courseDates.push(days['Tu']); } \n"])
    extend_([u"                if(timeString.indexOf('W') != -1) {     courseDates.push(days['W']); }\n"])
    extend_([u"                if(timeString.indexOf('Th') != -1) { courseDates.push(days['Th']); }\n"])
    extend_([u"                if(timeString.indexOf('F') != -1) {     courseDates.push(days['F']); }\n"])
    extend_([u'                \n'])
    extend_([u'                return courseDates;\n'])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        //takes course time info and converts into JS Date hour and minute\n'])
    extend_([u'        //9:30-10:50p\n'])
    extend_([u'        function getCourseTime(timeString) {\n'])
    extend_([u'                var inPM = timeString.charAt(timeString.length - 1);\n'])
    extend_([u"                timeString = timeString.replace(/[a-zA-Z&;]/g,'');\n"])
    extend_([u'                \n'])
    extend_([u"                var splitTimes = timeString.split('-');\n"])
    extend_([u'                        var startTime = splitTimes[0];\n'])
    extend_([u'                        var endTime = splitTimes[1];\n'])
    extend_([u'                \n'])
    extend_([u"                var splitStart = startTime.split(':');\n"])
    extend_([u'                        var startHour = parseInt(splitStart[0]);\n'])
    extend_([u'                        var startMin = parseInt(splitStart[1]);\n'])
    extend_([u'        \n'])
    extend_([u"                var splitEnd = endTime.split(':');\n"])
    extend_([u'                        var endHour = parseInt(splitEnd[0]);\n'])
    extend_([u'                        var endMin = parseInt(splitEnd[1]);\n'])
    extend_([u'                \n'])
    extend_([u'                //if end time goes into afternoon, do magic to convert\n'])
    extend_([u'                //into 24 hour times\n'])
    extend_([u"                if(inPM == 'p') {\n"])
    extend_([u'                        if(endHour < 12) {\n'])
    extend_([u'                                endHour += 12;\n'])
    extend_([u'                                \n'])
    extend_([u'                                if(startHour >= 1 && startHour < 12) {\n'])
    extend_([u'                                        startHour += 12;\n'])
    extend_([u'                                }\n'])
    extend_([u'                        }\n'])
    extend_([u'                } \n'])
    extend_([u'                \n'])
    extend_([u"                //alert('start: ' + startHour + ':' + startMin + ' end: ' + endHour + ':' + endMin);\n"])
    extend_([u'                \n'])
    extend_([u'                var time = {\n'])
    extend_([u'                        "startHour": startHour,\n'])
    extend_([u'                        "startMin": startMin,\n'])
    extend_([u'                        "endHour": endHour,\n'])
    extend_([u'                        "endMin": endMin\n'])
    extend_([u'                };\n'])
    extend_([u'                \n'])
    extend_([u'                return time;\n'])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        //returns an array of calEvents\n'])
    extend_([u'        function createEvents(courseName, courseDates, courseTime) {\n'])
    extend_([u'                var calEvents = [];\n'])
    extend_([u'\n'])
    extend_([u'                for(i in courseDates) {\n'])
    extend_([u'                        var e = {       \n'])
    extend_([u'                                "id": genID(),\n'])
    extend_([u'                                "start": new Date(START_YEAR, START_MONTH, courseDates[i], courseTime.startHour, courseTime.startMin),\n'])
    extend_([u'                                "end": new Date(START_YEAR, START_MONTH, courseDates[i], courseTime.endHour, courseTime.endMin),\n'])
    extend_([u'                                "title": courseName\n'])
    extend_([u'                        };\n'])
    extend_([u'                        \n'])
    extend_([u'                        calEvents.push(e);\n'])
    extend_([u'                        \n'])
    extend_([u'                        //add calEvent to the global course storage\n'])
    extend_([u'                        COURSE_BAG.push(e);\n'])
    extend_([u'                }\n'])
    extend_([u'                \n'])
    extend_([u'                return calEvents;\n'])
    extend_([u'        }\n'])
    extend_([u'        \n'])
    extend_([u'        jQuery(document).ready(function() {\n'])
    extend_([u'                //initialize calendar\n'])
    extend_([u"                jQuery('#calendar').weekCalendar({\n"])
    extend_([u'                        timeslotsPerHour: 4,\n'])
    extend_([u'                        useShortDayNames: true,\n'])
    extend_([u'                        noHeaderDate: true,\n'])
    extend_([u'                        firstDayOfWeek: 1,\n'])
    extend_([u'                        daysToShow:5,\n'])
    extend_([u'                        businessHours: {start: 8, end: 22, limitDisplay: true},\n'])
    extend_([u'                        allowCalEventOverlap: true,\n'])
    extend_([u'                        overlapEventsSeparate: true,\n'])
    extend_([u'                        buttons: false,\n'])
    extend_([u'                        defaultEventLength: 0,\n'])
    extend_([u'                        height: function(jQuerycalendar){\n'])
    extend_([u"                                return jQuery(window).height() - jQuery('#header').height();\n"])
    extend_([u'                        },\n'])
    extend_([u'                        draggable : function(calEvent, eventElement) {  return false; },\n'])
    extend_([u'                        resizable : function(calEvent, eventElement) {  return false; },\n'])
    extend_([u'                        eventNew : function(calEvent, element) {\n'])
    extend_([u'                                //TODO: different colors for different courses\n'])
    extend_([u'                        },\n'])
    extend_([u'                        eventClick : function(calEvent, element) {\n'])
    extend_([u"                                jQuery('#calendar').weekCalendar('removeEvent', calEvent.id);\n"])
    extend_([u'                        //      var eventTitle = calEvent.title;\n'])
    extend_([u'                        //      var eventsToDelete = [];\n'])
    extend_([u'                        //      \n'])
    extend_([u'                        //      for(i in COURSE_BAG) {\n'])
    extend_([u'                        //              var e = COURSE_BAG[i];\n'])
    extend_([u'                        //              \n'])
    extend_([u'                        //              if(e.title == eventTitle) {\n'])
    extend_([u"                        //                      jQuery('#calendar').weekCalendar('removeEvent', e.id);\n"])
    extend_([u'                        //                      eventsToDelete.push(i);\n'])
    extend_([u'                        //              }\n'])
    extend_([u'                        //      }\n'])
    extend_([u'                        //      \n'])
    extend_([u'                        //      for(i in eventsToDelete) {\n'])
    extend_([u'                        //              COURSE_BAG.splice(eventsToDelete[i], 1);\n'])
    extend_([u'                        //      }\n'])
    extend_([u'                        }\n'])
    extend_([u'                });\n'])
    extend_([u'                \n'])
    extend_([u"                //switch calendar view to the static date, rather than today's view\n"])
    extend_([u"                jQuery('#calendar').weekCalendar('gotoWeek',  new Date(START_YEAR, START_MONTH, START_DAY));\n"])
    extend_([u'                \n'])
    extend_([u'                //click handler for adding courses\n'])
    extend_([u"                jQuery('#school').load(function() {\n"])
    extend_([u"                        var list = jQuery('.course-list', frames['school'].document);\n"])
    extend_([u'                        \n'])
    extend_([u"                        jQuery('tr', list).click(function() {\n"])
    extend_([u'\n'])
    extend_([u"                                timeString = jQuery(this).find('td').eq(5).html();\n"])
    extend_([u'                                \n'])
    extend_([u'                                if(timeString == null) {\n'])
    extend_([u'                                        broadcastMessage("You didn\'t click on a course.");\n'])
    extend_([u'                                        return false;\n'])
    extend_([u'                                };\n'])
    extend_([u'                                \n'])
    extend_([u"                                if(timeString.indexOf('TBA') != -1) {\n"])
    extend_([u'                                        broadcastMessage("Course time is \'TBA\'");\n'])
    extend_([u'                                        return false;\n'])
    extend_([u'                                }\n'])
    extend_([u'                                \n'])
    extend_([u"                                courseCode = jQuery(this).find('td').eq(0).html();\n"])
    extend_([u"                                courseType = jQuery(this).find('td').eq(1).html();\n"])
    extend_([u"                                courseString = jQuery(this).prevAll().find('.CourseTitle:last').html();\n"])
    extend_([u'                                \n'])
    extend_([u'                                var calEvents = createEvents(\n'])
    extend_([u'                                        constructCourseName(courseString, courseType, courseCode),\n'])
    extend_([u'                                        getCourseDays(timeString), \n'])
    extend_([u'                                        getCourseTime(timeString)\n'])
    extend_([u'                                );\n'])
    extend_([u'                                \n'])
    extend_([u'                                for(i in calEvents) {\n'])
    extend_([u'                                        jQuery("#calendar").weekCalendar("updateEvent", calEvents[i]);\n'])
    extend_([u'                                }\n'])
    extend_([u'                        });\n'])
    extend_([u'                });\n'])
    extend_([u'                \n'])
    extend_([u'        });\n'])
    extend_([u'        </script>\n'])
    extend_([u'\n'])
    extend_([u'</head>\n'])
    extend_([u'<body style="overflow: hidden">\n'])
    extend_([u'        <div id="wrapper">\n'])
    extend_([u'                <div id="header">\n'])
    extend_([u'                        Ant Planner<sub>Alpha</sub>\n'])
    extend_([u'                </div>\n'])
    extend_([u'\n'])
    extend_([u'                <div id="calendar">\n'])
    extend_([u'                </div>\n'])
    extend_([u'                \n'])
    extend_([u'                <iframe src ="/search" id="school" name="school">               \n'])
    extend_([u'                </iframe>\n'])
    extend_([u'\n'])
    extend_([u'        </div>\n'])
    extend_([u'</body>\n'])
    extend_([u'</html>\n'])

    return self

index = CompiledTemplate(index, 'templates/index.html')

def schedule (schedule):
    __lineoffset__ = -3
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'\n'])
    extend_([u'<html>\n'])
    extend_([u'<head>\n'])
    extend_([u'        <title>Schedule</title>\n'])
    extend_([u"        <link rel='stylesheet' type='text/css' href='/static/css/schedule.css' />\n"])
    extend_([u'</head>\n'])
    extend_([u'<body>\n'])
    extend_([u'        ', escape_(schedule, True), u'\n'])
    extend_([u'</body>\n'])
    extend_([u'</html>\n'])

    return self

schedule = CompiledTemplate(schedule, 'templates/schedule.html')

def search (search_form):
    __lineoffset__ = -3
    loop = ForLoop()
    self = TemplateResult(); extend_ = self.extend
    extend_([u'\n'])
    extend_([u'<html>\n'])
    extend_([u'<head>\n'])
    extend_([u'        <title>Search</title>\n'])
    extend_([u"        <link rel='stylesheet' type='text/css' href='/static/css/main.css' />\n"])
    extend_([u'</head>\n'])
    extend_([u'<body>\n'])
    extend_([u'        ', escape_(search_form, True), u'\n'])
    extend_([u'</body>\n'])
    extend_([u'</html>\n'])

    return self

search = CompiledTemplate(search, 'templates/search.html')

